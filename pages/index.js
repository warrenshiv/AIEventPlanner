import React, { useState } from 'react';
import Head from 'next/head';
import { Inter } from 'next/font/google';
import InputForm from '@/components/InputForm';
import ResponseDisplay from '@/components/ResponseDisplay';
import SubmitButton from '@/components/SubmitButton';
import useApi from '@/hooks/useApi';
import { getUserPrompt } from '../prompts/promptUtils';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const [guests, setGuests] = useState("");
  const [location, setLocation] = useState("");
  const [description, setDescription] = useState("");
  
  const [hasErrors, setHasErrors] = useState(false);

  const { data, error, loading, fetchData } = useApi();

  const handleSubmit = async (event) => {
    event.preventDefault();

    // Check for validation errors before submitting
    if (!guests.trim() || !location.trim() || !description.trim()) {
      // Set an error flag if there are errors
      setHasErrors(true);
      return;
    }

    // If there are no errors, proceed with form submission
    setHasErrors(false);
    const userMessage = getUserPrompt({ guests, location, description });
    await fetchData('/api/openai', 'POST', userMessage);
  };

  return (
    <>
      <Head>
        <title>AIEventPlanner</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
        <h1 className="">Welcome to the AI-Enhanced Event Planning App</h1>
        <p className="">Plan your events effortlessly with AI assistance</p>
        <form>
          <InputForm
            guests={guests}
            onChange={(e) => setGuests(e.target.value)}
            location={location}
            onChange2={(e) => setLocation(e.target.value)}
            description={description}
            onChange3={(e) => setDescription(e.target.value)}
          />
          <div className='mb-3'>
          {hasErrors && (
            <div className="error">Please fill in</div>
          )}
          </div>
          <SubmitButton onClick={handleSubmit} disabled={loading} />
          <ResponseDisplay data={data} error={error} loading={loading} />
        </form>
      </main>
    </>
  );
}
